---
- name: Check if openssh-server is installed.
  command: dpkg -s openssh-server
  ignore_errors: True
  changed_when: false
  register: openssh_server_installed

- name: Identify openssh-server keys.
  find:
    paths: /etc/ssh
    patterns: "ssh_host_*_key*"
  register: openssh_server_keys
  when: openssh_server_installed is succeeded

- name: Remove openssh-server keys.
  file:
    path: "{{ item.path }}"
    state: absent
  when: openssh_server_installed is succeeded
  with_items:
    - "{{ openssh_server_keys.files }}"

- name: Add script that provisions the ssh host keys.
  copy:
    src: edi-ssh-host-keys
    dest: /usr/bin/edi-ssh-host-keys
    mode: 0755
  when: openssh_server_installed is succeeded

- name: Add a systemd service that re-generates the openssh-server keys.
  template:
    src: openssh-server-key-generator.service
    dest: /lib/systemd/system/
  when: openssh_server_installed is succeeded

- name: Create a directory that will receive the systemd symbolic link.
  file:
    path: /etc/systemd/system/multi-user.target.requires
    state: directory
  when: openssh_server_installed is succeeded

- name: Enable the systemd service that re-generates the openssh-server keys.
  file:
    src: /lib/systemd/system/openssh-server-key-generator.service
    dest: /etc/systemd/system/multi-user.target.requires/openssh-server-key-generator.service
    state: link
  when: openssh_server_installed is succeeded

# Works only with newer Ansible versions (since systemd is not running):
#- name: Enable the systemd service that re-generates the openssh-server keys.
#  systemd:
#    name: openssh-server-key-generator.service
#    enabled: yes
#  when: openssh_server_installed is succeeded
